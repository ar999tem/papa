{"version":3,"file":"static/js/718.2a4a8ce5.chunk.js","mappings":"uMACA,EAA0B,yBAA1B,EAAkE,8BAAlE,EAAyG,wBAAzG,EAA0I,wBAA1I,EAA6K,0B,SCU7K,EARmB,SAACA,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,gBAAKC,UAAWC,EAAW,IAAMA,EAAjC,UACI,SAAC,KAAD,CAASC,GAAIJ,EAAb,SAAoBD,EAAMM,QAErC,ECHD,EAJgB,SAACN,GACb,OAAO,gBAAKG,UAAWC,EAAhB,SAA2BJ,EAAMO,SAC3C,ECuCD,IAnCoBC,EAAAA,EAAAA,GAAiB,IACrB,SAACR,GACb,IAAIS,EAAQT,EAAMU,YACdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAYR,KAAMQ,EAAER,KAAiBJ,GAAIY,EAAEZ,IAAZY,EAAEZ,GAArC,IACrCa,EAAmBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,SAAC,EAAD,CAASV,QAASU,EAAEV,SAAcU,EAAEf,GAAxC,IAI3C,OAAKF,EAAMkB,QAEP,iBAAKf,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACKO,KAEL,gBAAKR,UAAWC,EAAhB,UACI,yBAAMW,UAPQ,SAAC,KAAD,CAAUV,GAAG,UAY1C,G,oBCTD,GAAec,E,QAAAA,KAAQC,EAAAA,EAAAA,KAbD,SAACX,GACnB,MAAO,CACHC,YAAaD,EAAMC,YAE1B,IACuB,SAACW,GACrB,MAAO,CACHC,YAAa,SAACC,GACVF,GAASG,EAAAA,EAAAA,GAAmBD,GAC/B,EAER,IAGGE,EAAAA,EADJ,CAEEC,E,oJCjBEC,EAA6B,SAAClB,GAAD,MAAY,CACzCS,OAAQT,EAAMmB,KAAKV,OADU,EAIpBO,EAAmB,SAACI,GAAe,IACtCC,EADqC,0IAEvC,WACI,OAAKC,KAAK/B,MAAMkB,QACT,SAACW,GAAD,UAAeE,KAAK/B,SADI,SAAC,KAAD,CAAUK,GAAG,UAE/C,KALsC,GACX2B,EAAAA,WAOhC,OADqCZ,EAAAA,EAAAA,IAAQO,EAARP,CAAoCU,EAE5E,C,uDCjBM,IAIMtB,EAAmB,SAACyB,GAAD,OAAe,SAACC,GAC5C,GAAIA,EAAMC,OAASF,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,WAEjC,CAH+B,C","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/dialogsContainer.jsx","hoc/WithAutchRedirect.js","utils/validators.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__h7KJk\",\"dialogsitems\":\"Dialogs_dialogsitems__-KQQ7\",\"active\":\"Dialogs_active__Bx-84\",\"dialog\":\"Dialogs_dialog__NKQgC\",\"messages\":\"Dialogs_messages__1WRD2\",\"message\":\"Dialogs_message__HNvhV\"};","import { NavLink } from 'react-router-dom'\r\nimport s from './../Dialogs.module.css'\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>)\r\n}\r\n\r\nexport default DialogItem","import s from './../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message","import { Navigate } from 'react-router-dom'\r\n// import { Field, reduxForm } from 'redux-form'\r\nimport { maxLengthCreator, required } from '../../utils/validators'\r\nimport { Textarea } from '../common/Preloader/formsControls/formsControls'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport s from './Dialogs.module.css'\r\nimport Message from './Message/Message'\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} />)\r\n    let AddNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n    if (!props.isAuth) return <Navigate to='/login' />\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsitems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                {/* <AddMessageFormRedux onSubmit={AddNewMessage} /> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                {/* <Field component={Textarea} name='newMessageBody' placeholder='Enter your message' validate={[required, maxLength50]} /> */}\r\n            </div>\r\n            <div> <button >send</button></div>\r\n        </form>)\r\n}\r\n// // const AddMessageFormRedux = reduxForm({\r\n//     form: 'dialogAddMessageForm'\r\n// })\r\n// (AddMessageForm)\r\n\r\nexport default Dialogs","import { sendMessageCreator } from '../../redux/dialogsReducer'\r\nimport Dialogs from './Dialogs'\r\nimport { connect } from 'react-redux'\r\nimport { WithAuthRedirect } from '../../hoc/WithAutchRedirect'\r\nimport { compose } from 'redux'\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nlet mapDispatcToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatcToProps),\r\n    WithAuthRedirect\r\n)(Dialogs) ","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Navigate } from \"react-router-dom\"\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to='/login' />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent\r\n}","export const required = value => {\r\n    if (value) return undefined\r\n    return 'Field is required'\r\n}\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `max length is ${maxLength} symbols`\r\n    return undefined\r\n}"],"names":["props","path","id","className","s","to","name","message","maxLengthCreator","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","isAuth","compose","connect","dispatch","sendMessage","newMessageBody","sendMessageCreator","WithAuthRedirect","Dialogs","mapStateToPropsForRedirect","auth","Component","RedirectComponent","this","React","maxLength","value","length"],"sourceRoot":""}